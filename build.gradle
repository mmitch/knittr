apply plugin: 'java'
apply plugin: 'jacoco'

repositories {
	mavenCentral()

	/* this is for cgarbs-javalib */
	maven {
		url "http://www.cgarbs.de/maven2/"
	}
}

jacocoTestReport {
	reports {
		xml.enabled true
	}
}

dependencies {
	compile 'org.apache.xmlgraphics:batik-rasterizer:1.7', 'de.cgarbs:cgarbs-javalib:0.2.0'
	testCompile 'junit:junit:4.+'
}

 /***
 **** my own tasks
 ***/

task fixit(type: Exec) {
	description 'Fixes line breaks and indentation on empty lines.'

	commandLine 'tools/fixit.sh'
}

task publishDropbox(type: Copy, dependsOn: jar) {
	description 'Deploy current JAR to Dropbox.'

	from( jar.destinationDir ) {
		include jar.archiveName
		rename { jar.baseName + '.jar' }
	}
	into '/home/mitch/Dropbox/schnucki/knittr'
}

task checkl10n() {
	description 'Check all localizations for missing property file keys.'

	/* FIXME: all paths handcrafted, there should be a better way */
	finalizedBy(
		checkl10nSingle('src/main/resources/de/cgarbs/knittr/resource', 'MainWindow'),
		checkl10nSingle('src/main/resources/de/cgarbs/knittr/resource', 'Project'),
		checkl10nSingle('src/main/resources/de/cgarbs/knittr/resource', 'RenderException'),
		)
}

def checkl10nSingle(path, prefix) {
	description 'Check one localization for missing property file keys.'

	return tasks.create("checkl10n /${path}/${prefix}", Exec) {
		List args = [ 'tools/check-l10n.pl' ]
		fileTree(dir: path).include("${prefix}*.properties").each {
			File file -> args.add(file as String)
		}

		commandLine args
	}
}
